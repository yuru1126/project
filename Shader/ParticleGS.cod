//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PARTICLE_CONSTANTS
// {
//
//   uint particle_count;               // Offset:    0 Size:     4 [unused]
//   float particle_size;               // Offset:    4 Size:     4
//   float elapsed_time;                // Offset:    8 Size:     4 [unused]
//   float Progress_time;               // Offset:   12 Size:     4 [unused]
//   float4 setHSV;                     // Offset:   16 Size:    16 [unused]
//   float divide_length;               // Offset:   32 Size:     4 [unused]
//   int count;                         // Offset:   36 Size:     4 [unused]
//   float2 dummy;                      // Offset:   40 Size:     8 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64
//   float4 camera_position;            // Offset:   64 Size:    16 [unused]
//
// }
//
// Resource bind info for particle_buffer
// {
//
//   struct particle
//   {
//       
//       float4 position;               // Offset:    0
//       float4 velocity;               // Offset:   16
//       float4 normal;                 // Offset:   32
//       float4 color;                  // Offset:   48
//       float gravity;                 // Offset:   64
//       float age;                     // Offset:   68
//       float2 length_shrink;          // Offset:   72
//       float size;                    // Offset:   80
//       float divide_age;              // Offset:   84
//       float use_tile;                // Offset:   88
//       float animation_speed;         // Offset:   92
//       float appearance_timer;        // Offset:   96
//       float appearance_frequency;    // Offset:  100
//       float2 dummyF;                 // Offset:  104
//       int draw_type;                 // Offset:  112
//       int3 tiles;                    // Offset:  116
//       int state;                     // Offset:  128
//       int sub_emitter_flag;          // Offset:  132
//       int2 dummyI;                   // Offset:  136
//
//   } $Element;                        // Offset:    0 Size:   144
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// particle_buffer                   texture  struct         r/o             t9      1 
// PARTICLE_CONSTANTS                cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// VERTEXID                 0   x           0     NONE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// DRAW_TYPE                0   x           3     NONE     int   x   
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_resource_structured t9, 144
dcl_input v[1][0].x
dcl_temps 7
dcl_inputprimitive point 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.x
dcl_maxout 4
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r0.xyz, v[0][0].x, l(32), t9.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.zxyz
mul r1.xyz, r0.xyzx, l(1.000000, 0.000000, 0.000000, 0.000000)
mad r1.xyz, r0.zxyz, l(0.000000, 0.000000, 1.000000, 0.000000), -r1.xyzx
dp2 r0.w, r1.xzxx, r1.xzxx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r0.xyzx, r1.yzxy
mad r0.xyz, r0.zxyz, r1.zxyz, -r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r2.y, v[0][0].x, l(72), t9.xxxx
mul r0.w, r2.y, cb0[0].y
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r2.x, v[0][0].x, l(80), t9.xxxx
mul r0.w, r0.w, r2.x
mul r3.xyz, r0.xyzx, -r0.wwww
mad r3.xyz, -r0.wwww, r1.xyzx, r3.xyzx
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r4.xyz, v[0][0].x, l(0), t9.xyzx
add r3.xyz, r3.xyzx, r4.xyzx
mul r5.xyzw, r3.yyyy, cb1[1].xyzw
mad r5.xyzw, r3.xxxx, cb1[0].xyzw, r5.xyzw
mad r3.xyzw, r3.zzzz, cb1[2].xyzw, r5.xyzw
add r3.xyzw, r3.xyzw, cb1[3].xyzw
mov o0.xyzw, r3.xyzw
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r3.xyzw, v[0][0].x, l(48), t9.xyzw
mov o1.xyzw, r3.xyzw
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r0.w, v[0][0].x, l(88), t9.xxxx
ftoi r0.w, r0.w
and r1.w, r0.w, l(0x80000000)
imax r0.w, r0.w, -r0.w
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r5.xy, v[0][0].x, l(112), t9.xyxx
imax r4.w, r5.y, -r5.y
udiv null, r0.w, r0.w, r4.w
ineg r4.w, r0.w
movc r0.w, r1.w, r4.w, r0.w
utof r0.w, r0.w
itof r1.w, r5.y
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mad r4.w, r0.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mov o2.x, r4.w
mov o2.y, l(0)
mov o3.x, r5.x
emit_stream m0
mov r2.zw, l(0,0,1.000000,-1.000000)
mul r5.yz, r2.yyzy, cb0[0].yyyy
mul r2.yz, r2.xxyx, r5.yyzy
mul r2.xy, r2.wxww, r2.yzyy
mul r5.yzw, r0.xxyz, r2.yyyy
mad r6.xyz, r2.xxxx, r1.xyzx, r5.yzwy
mad r5.yzw, r2.yyyy, r1.xxyz, r5.yyzw
mul r1.xyz, r1.xyzx, r2.yyyy
mad r0.xyz, r2.xxxx, r0.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r4.xyzx
add r1.xyz, r4.xyzx, r5.yzwy
add r2.xyz, r4.xyzx, r6.xyzx
mul r6.xyzw, r2.yyyy, cb1[1].xyzw
mad r6.xyzw, r2.xxxx, cb1[0].xyzw, r6.xyzw
mad r2.xyzw, r2.zzzz, cb1[2].xyzw, r6.xyzw
add r2.xyzw, r2.xyzw, cb1[3].xyzw
mov o0.xyzw, r2.xyzw
mov o1.xyzw, r3.xyzw
mov o2.x, r4.w
mov o2.y, l(1.000000)
mov o3.x, r5.x
emit_stream m0
mul r2.xyzw, r0.yyyy, cb1[1].xyzw
mad r2.xyzw, r0.xxxx, cb1[0].xyzw, r2.xyzw
mad r2.xyzw, r0.zzzz, cb1[2].xyzw, r2.xyzw
add r2.xyzw, r2.xyzw, cb1[3].xyzw
mov o0.xyzw, r2.xyzw
mov o1.xyzw, r3.xyzw
mov o2.x, r0.w
mov o2.y, l(0)
mov o3.x, r5.x
emit_stream m0
mul r2.xyzw, r1.yyyy, cb1[1].xyzw
mad r2.xyzw, r1.xxxx, cb1[0].xyzw, r2.xyzw
mad r1.xyzw, r1.zzzz, cb1[2].xyzw, r2.xyzw
add r1.xyzw, r1.xyzw, cb1[3].xyzw
mov o0.xyzw, r1.xyzw
mov o1.xyzw, r3.xyzw
mov o2.x, r0.w
mov o2.y, l(1.000000)
mov o3.x, r5.x
emit_stream m0
cut_stream m0
ret 
// Approximately 91 instruction slots used
