//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for X_buffer
// {
//
//   struct Velocity
//   {
//       
//       float velocity;                // Offset:    0
//       float after;                   // Offset:    4
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for Y_buffer
// {
//
//   struct Velocity
//   {
//       
//       float velocity;                // Offset:    0
//       float after;                   // Offset:    4
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for divergence
// {
//
//   float $Element;                    // Offset:    0 Size:     4
//
// }
//
// Resource bind info for pressure
// {
//
//   float $Element;                    // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// X_buffer                              UAV  struct         r/w             u0      1 
// Y_buffer                              UAV  struct         r/w             u1      1 
// divergence                            UAV  struct         r/w             u2      1 
// pressure                              UAV  struct         r/w             u3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_uav_structured u0, 8
dcl_uav_structured u1, 8
dcl_uav_structured u2, 4
dcl_uav_structured u3, 4
dcl_input vThreadID.xy
dcl_temps 1
dcl_thread_group 13, 12, 1
imad r0.xy, vThreadID.yxyy, l(13, 12, 0, 0), vThreadID.xyxx
store_structured u0.xy, r0.x, l(0), l(0,0,0,0)
store_structured u1.xy, r0.y, l(0), l(0,0,0,0)
imin r0.x, vThreadID.x, l(11)
imad r0.x, vThreadID.y, l(12), r0.x
store_structured u2.x, r0.x, l(0), l(0)
store_structured u3.x, r0.x, l(0), l(0)
ret 
// Approximately 8 instruction slots used
