//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PARTICLE_CONSTANTS
// {
//
//   uint particle_count;               // Offset:    0 Size:     4 [unused]
//   float particle_size;               // Offset:    4 Size:     4 [unused]
//   float elapsed_time;                // Offset:    8 Size:     4 [unused]
//   float Progress_time;               // Offset:   12 Size:     4 [unused]
//   float4 setHSV;                     // Offset:   16 Size:    16 [unused]
//   float divide_length;               // Offset:   32 Size:     4 [unused]
//   int count;                         // Offset:   36 Size:     4
//   float2 dummy;                      // Offset:   40 Size:     8 [unused]
//
// }
//
// Resource bind info for particle_buffer
// {
//
//   struct particle
//   {
//       
//       float4 position;               // Offset:    0
//       float4 velocity;               // Offset:   16
//       float4 normal;                 // Offset:   32
//       float4 color;                  // Offset:   48
//       float gravity;                 // Offset:   64
//       float age;                     // Offset:   68
//       float2 length_shrink;          // Offset:   72
//       float size;                    // Offset:   80
//       float divide_age;              // Offset:   84
//       float use_tile;                // Offset:   88
//       float animation_speed;         // Offset:   92
//       float appearance_timer;        // Offset:   96
//       float appearance_frequency;    // Offset:  100
//       float2 dummyF;                 // Offset:  104
//       int draw_type;                 // Offset:  112
//       int3 tiles;                    // Offset:  116
//       int state;                     // Offset:  128
//       int sub_emitter_flag;          // Offset:  132
//       int2 dummyI;                   // Offset:  136
//
//   } $Element;                        // Offset:    0 Size:   144
//
// }
//
// Resource bind info for particle_register_buffer
// {
//
//   struct particle
//   {
//       
//       float4 position;               // Offset:    0
//       float4 velocity;               // Offset:   16
//       float4 normal;                 // Offset:   32
//       float4 color;                  // Offset:   48
//       float gravity;                 // Offset:   64
//       float age;                     // Offset:   68
//       float2 length_shrink;          // Offset:   72
//       float size;                    // Offset:   80
//       float divide_age;              // Offset:   84
//       float use_tile;                // Offset:   88
//       float animation_speed;         // Offset:   92
//       float appearance_timer;        // Offset:   96
//       float appearance_frequency;    // Offset:  100
//       float2 dummyF;                 // Offset:  104
//       int draw_type;                 // Offset:  112
//       int3 tiles;                    // Offset:  116
//       int state;                     // Offset:  128
//       int sub_emitter_flag;          // Offset:  132
//       int2 dummyI;                   // Offset:  136
//
//   } $Element;                        // Offset:    0 Size:   144
//
// }
//
// Resource bind info for count_buffer
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// particle_buffer                       UAV  struct         r/w             u0      1 
// particle_register_buffer              UAV  struct         r/w             u2      1 
// count_buffer                          UAV  struct     consume             u5      1 
// PARTICLE_CONSTANTS                cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_uav_structured u0, 144
dcl_uav_structured u2, 144
dcl_uav_structured u5, 4
dcl_input vThreadID.x
dcl_temps 3
dcl_thread_group 128, 1, 1
imm_atomic_consume r0.x, u5
iadd r0.y, vThreadID.x, cb0[2].y
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r1.xyzw, r0.y, l(0), u2.xyzw
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.x, r0.x, l(0), u5.xxxx
store_structured u0.xyzw, r0.x, l(0), r1.xyzw
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r1.xyzw, r0.y, l(16), u2.xyzw
store_structured u0.xyzw, r0.x, l(16), r1.xyzw
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r1.xyzw, r0.y, l(32), u2.xyzw
store_structured u0.xyzw, r0.x, l(32), r1.xyzw
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r1.xyzw, r0.y, l(48), u2.xyzw
store_structured u0.xyzw, r0.x, l(48), r1.xyzw
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r1.xyzw, r0.y, l(64), u2.xyzw
store_structured u0.xyzw, r0.x, l(64), r1.xyzw
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r1.xyzw, r0.y, l(80), u2.xyzw
store_structured u0.xyzw, r0.x, l(80), r1.xyzw
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r1.xyzw, r0.y, l(96), u2.xyzw
store_structured u0.xyzw, r0.x, l(96), r1.xyzw
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r1.xyzw, r0.y, l(112), u2.xyzw
ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r2.xyzw, r0.y, l(128), u2.xyzw
store_structured u0.xyzw, r0.x, l(112), r1.xyzw
store_structured u0.xyzw, r0.x, l(128), r2.xyzw
ret 
// Approximately 22 instruction slots used
