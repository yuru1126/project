//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//
// }
//
// cbuffer CbMesh
// {
//
//   row_major float4x4 boneTransforms[128];// Offset:    0 Size:  8192
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbMesh                            cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TANGENT                  0   xyz         2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float       
// COLOR                    0   xyzw        4     NONE   float       
// WEIGHTS                  0   xyzw        5     NONE   float   xyzw
// BONES                    0   xyzw        6     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[512], dynamicIndexed
dcl_input v0.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_output_siv o0.xyzw, position
dcl_temps 3
ishl r0.xyzw, v6.xyzw, l(2, 2, 2, 2)
mul r1.xyz, v0.yyyy, cb1[r0.y + 1].xyzx
mad r1.xyz, v0.xxxx, cb1[r0.y + 0].xyzx, r1.xyzx
mad r1.xyz, v0.zzzz, cb1[r0.y + 2].xyzx, r1.xyzx
mad r1.xyz, v0.wwww, cb1[r0.y + 3].xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, v5.yyyy
mul r2.xyz, v0.yyyy, cb1[r0.x + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r0.x + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r0.x + 2].xyzx, r2.xyzx
mad r2.xyz, v0.wwww, cb1[r0.x + 3].xyzx, r2.xyzx
mad r1.xyz, v5.xxxx, r2.xyzx, r1.xyzx
mul r2.xyz, v0.yyyy, cb1[r0.z + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r0.z + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r0.z + 2].xyzx, r2.xyzx
mad r0.xyz, v0.wwww, cb1[r0.z + 3].xyzx, r2.xyzx
mad r0.xyz, v5.zzzz, r0.xyzx, r1.xyzx
mul r1.xyz, v0.yyyy, cb1[r0.w + 1].xyzx
mad r1.xyz, v0.xxxx, cb1[r0.w + 0].xyzx, r1.xyzx
mad r1.xyz, v0.zzzz, cb1[r0.w + 2].xyzx, r1.xyzx
mad r1.xyz, v0.wwww, cb1[r0.w + 3].xyzx, r1.xyzx
mad r0.xyz, v5.wwww, r1.xyzx, r0.xyzx
mul r1.xyzw, r0.yyyy, cb0[1].xyzw
mad r1.xyzw, r0.xxxx, cb0[0].xyzw, r1.xyzw
mad r0.xyzw, r0.zzzz, cb0[2].xyzw, r1.xyzw
add o0.xyzw, r0.xyzw, cb0[3].xyzw
ret 
// Approximately 26 instruction slots used
