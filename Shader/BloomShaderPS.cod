//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PARTICLE_CONSTANTS
// {
//
//   float3 set_color;                  // Offset:    0 Size:    12
//   float min_factor;                  // Offset:   12 Size:     4
//   float max_factor;                  // Offset:   16 Size:     4
//   float3 dummy;                      // Offset:   20 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// DiffuseTexture                    texture  float4          2d             t0      1 
// PARTICLE_CONSTANTS                cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 2
add r0.x, -cb0[0].w, cb0[1].x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t0.xyzw, s0
mul r1.xyzw, r1.xyzw, v1.xyzw
dp3 r0.y, r1.xyzx, cb0[0].xyzx
add r0.y, r0.y, -cb0[0].w
mul_sat r0.x, r0.x, r0.y
mad r0.y, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.y
mul o0.xyz, r1.xyzx, r0.xxxx
mov o0.w, r1.w
ret 
// Approximately 13 instruction slots used
