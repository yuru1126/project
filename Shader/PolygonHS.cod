//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbPolygon
// {
//
//   float time;                        // Offset:    0 Size:     4 [unused]
//   float destruction_factor;          // Offset:    4 Size:     4 [unused]
//   float position_factor;             // Offset:    8 Size:     4 [unused]
//   float rotation_factor;             // Offset:   12 Size:     4 [unused]
//   float scale_factor;                // Offset:   16 Size:     4 [unused]
//   float yplas_factor;                // Offset:   20 Size:     4 [unused]
//   float multiply;                    // Offset:   24 Size:     4
//   int geometry_type;                 // Offset:   28 Size:     4 [unused]
//   float2 interpolation_vertical;     // Offset:   32 Size:     8 [unused]
//   float2 area_size_vertical;         // Offset:   40 Size:     8 [unused]
//   float vertical_end;                // Offset:   48 Size:     4 [unused]
//   float3 model_position;             // Offset:   52 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbPolygon                         cbuffer      NA          NA            cb3      1 
//
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  TRIEDGE   float   x   
// SV_TessFactor            1   x           1  TRIEDGE   float   x   
// SV_TessFactor            2   x           2  TRIEDGE   float   x   
// SV_InsideTessFactor      0   x           3   TRIINT   float   x   
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
// Tessellation Domain   # of control points
// -------------------- --------------------
// Triangle                                3
//
// Tessellation Output Primitive  Partitioning Type 
// ------------------------------ ------------------
// Clockwise Triangles            Integer           
//
hs_5_0
hs_decls 
dcl_input_control_point_count 3
dcl_output_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_tessellator_partitioning partitioning_integer
dcl_tessellator_output_primitive output_triangle_cw
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB3[2], immediateIndexed
hs_control_point_phase 
dcl_input vOutputControlPointID
dcl_input v[3][0].xyz
dcl_input v[3][1].xyz
dcl_input v[3][2].xy
dcl_input v[3][3].xyzw
dcl_output o0.xy
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_temps 1
mov r0.x, vOutputControlPointID
mov o0.xy, v[r0.x + 0][2].xyxx
mov o1.xyz, v[r0.x + 0][0].xyzx
mov o2.xyz, v[r0.x + 0][1].xyzx
mov o3.xyzw, v[r0.x + 0][3].xyzw
ret 
hs_join_phase 
dcl_input vicp[3][0].xyz
dcl_output_siv o0.x, finalTriUeq0EdgeTessFactor
dcl_output_siv o1.x, finalTriVeq0EdgeTessFactor
dcl_output_siv o2.x, finalTriWeq0EdgeTessFactor
dcl_output_siv o3.x, finalTriInsideTessFactor
dcl_temps 3
add r0.xyz, -vicp[0][0].zxyz, vicp[1][0].zxyz
add r1.xyz, -vicp[0][0].yzxy, vicp[2][0].yzxy
mul r2.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
mul r0.x, r0.x, l(0.500000)
sqrt r0.x, r0.x
mul r0.x, r0.x, cb3[1].z
max r0.x, r0.x, l(1.000000)
mov o0.x, r0.x
mov o1.x, r0.x
mov o2.x, r0.x
mov o3.x, r0.x
ret 
// Approximately 21 instruction slots used
