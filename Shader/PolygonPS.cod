//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16
//
// }
//
// cbuffer CbPolygon
// {
//
//   float time;                        // Offset:    0 Size:     4
//   float destruction_factor;          // Offset:    4 Size:     4 [unused]
//   float position_factor;             // Offset:    8 Size:     4 [unused]
//   float rotation_factor;             // Offset:   12 Size:     4 [unused]
//   float scale_factor;                // Offset:   16 Size:     4 [unused]
//   float yplas_factor;                // Offset:   20 Size:     4 [unused]
//   float multiply;                    // Offset:   24 Size:     4 [unused]
//   int geometry_type;                 // Offset:   28 Size:     4 [unused]
//   float2 interpolation_vertical;     // Offset:   32 Size:     8
//   float2 area_size_vertical;         // Offset:   40 Size:     8 [unused]
//   float vertical_end;                // Offset:   48 Size:     4
//   float3 model_position;             // Offset:   52 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseMapSamplerState            sampler      NA          NA             s0      1 
// diffuseMap                        texture  float4          2d             t0      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbPolygon                         cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
// DEPTH                    0     z         3     NONE   float     z 
// COLOR                    0   xyzw        4     NONE   float   xyzw
// TYPE                     0   x           5     NONE     int   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
// SV_TARGET                3   xyzw        3   TARGET   float   xyzw
// SV_TARGET                4   xyzw        4   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_constantbuffer CB3[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v3.z
dcl_input_ps linear v4.xyzw
dcl_input_ps constant v5.x
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 3
if_z v5.x
  add r0.x, cb3[0].x, l(-1.000000)
  mul_sat r0.x, r0.x, l(1.333333)
  mul r0.x, r0.x, r0.x
  sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0
  mul r2.xyzw, r1.xyzw, v4.xyzw
  mad r0.yzw, -r1.xxyz, v4.xxyz, l(0.000000, 0.900000, 1.000000, 0.900000)
  mad o0.xyz, r0.xxxx, r0.yzwy, r2.xyzx
  mov o0.w, r2.w
else 
  ieq r0.x, v5.x, l(1)
  if_nz r0.x
    mov o0.xyzw, v4.xyzw
  else 
    ieq r0.x, v5.x, l(2)
    if_nz r0.x
      sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0
      mul r0.w, r0.w, v4.w
      mul r1.x, cb3[0].x, l(0.363636)
      max r1.x, r1.x, l(0.000000)
      add r1.y, -cb3[2].x, cb3[2].y
      mad r1.x, r1.x, r1.y, cb3[2].x
      mad r1.y, cb3[3].x, l(1.500000), cb3[3].z
      add r1.y, r1.y, -v1.y
      add_sat r1.x, -r1.x, r1.y
      mad r0.xyz, r0.xyzx, v4.xyzx, l(-0.900000, -1.000000, -0.900000, 0.000000)
      mad o0.xyz, r1.xxxx, r0.xyzx, l(0.900000, 1.000000, 0.900000, 0.000000)
      mov o0.w, r0.w
    endif 
  endif 
endif 
add r0.xyz, v1.xyzx, -cb0[5].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt o1.xz, r0.xxxx
mov o1.y, v3.z
mov o1.w, l(1.000000)
mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o2.w, l(1.000000)
mov o3.xyz, v1.xyzx
mov o3.w, l(1.000000)
mov o4.xyzw, l(1.000000,1.000000,0,1.000000)
ret 
// Approximately 42 instruction slots used
