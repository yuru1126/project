//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   float4 lightDirection;             // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16
//
// }
//
// cbuffer CbPolygon
// {
//
//   float time;                        // Offset:    0 Size:     4
//   float destruction_factor;          // Offset:    4 Size:     4
//   float position_factor;             // Offset:    8 Size:     4
//   float rotation_factor;             // Offset:   12 Size:     4
//   float scale_factor;                // Offset:   16 Size:     4
//   float yplas_factor;                // Offset:   20 Size:     4
//   float multiply;                    // Offset:   24 Size:     4 [unused]
//   int geometry_type;                 // Offset:   28 Size:     4
//   float2 interpolation_vertical;     // Offset:   32 Size:     8
//   float2 area_size_vertical;         // Offset:   40 Size:     8
//   float vertical_end;                // Offset:   48 Size:     4
//   float3 model_position;             // Offset:   52 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbPolygon                         cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// POSITION                 0   xyz         2     NONE   float       
// COLOR                    0   xyzw        3     NONE   float   xyzw
// NORMAL                   0   xyz         4     NONE   float   xyz 
// SV_PrimitiveID           0    N/A   primID   PRIMID    uint    YES
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
// DEPTH                    0     z         3     NONE   float     z 
// COLOR                    0   xyzw        4     NONE   float   xyzw
// TYPE                     0   x           5     NONE     int   x   
//
gs_4_0
dcl_constantbuffer CB0[6], immediateIndexed
dcl_constantbuffer CB3[4], immediateIndexed
dcl_input_siv v[3][0].xyzw, position
dcl_input v[3][1].xy
dcl_input v[3][2].xyz
dcl_input v[3][3].xyzw
dcl_input v[3][4].xyz
dcl_input vPrim
dcl_temps 9
dcl_inputprimitive triangle 
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xy
dcl_output o3.z
dcl_output o4.xyzw
dcl_output o5.x
dcl_maxout 4
add r0.xyz, v[1][0].xyzx, v[0][0].xyzx
add r0.xyz, r0.xyzx, v[2][0].xyzx
mul r1.xy, r0.xyxx, l(0.333333, 0.333333, 0.000000, 0.000000)
add r2.xyz, -v[0][0].zxyz, v[1][0].zxyz
add r3.xyz, -v[0][0].yzxy, v[2][0].yzxy
mul r4.xyz, r2.xyzx, r3.xyzx
mad r2.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
iadd r3.xyzw, vPrim, l(10, 1, 10, 1)
utof r3.xyzw, r3.xyzw
mul r3.xyzw, r1.xyxy, r3.xyzw
mul r4.xy, r3.zwzz, l(3.225460, 8.975250, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
sincos r1.w, null, r1.w
mul r1.w, r1.w, l(70124.148438)
frc r1.w, r1.w
mad r2.w, r1.w, l(2.000000), l(-1.500000)
ieq r4.xy, cb3[1].wwww, l(0, 3, 0, 0)
or r4.x, r4.y, r4.x
if_nz r4.x
  rsq r4.x, r0.w
  mul r2.xyz, r2.xyzx, r4.xxxx
  add r4.x, r2.w, r2.w
  add r4.y, cb3[0].x, l(-1.000000)
  mul_sat r4.y, r4.y, l(0.666667)
  mul r4.y, r4.y, r4.y
  mad r4.z, r4.y, l(-2.500000), l(3.500000)
  mad r5.xyz, -r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000), v[0][0].xyzx
  mul r4.w, r4.y, cb3[1].y
  mad r5.w, -r4.y, cb3[1].x, l(1.000000)
  log r5.w, r5.w
  mul r4.z, r4.z, r5.w
  exp r4.z, r4.z
  mul r5.xyz, r4.zzzz, r5.xyzx
  mul r4.x, r4.y, r4.x
  mul r4.x, r4.x, cb3[0].w
  dp3 r5.w, r4.xxxx, r4.xxxx
  rsq r6.x, r5.w
  mul r4.x, r4.x, r6.x
  sqrt r5.w, r5.w
  ge r6.x, r5.w, l(0.001000)
  sincos r7.x, r8.x, r5.w
  add r5.w, -r8.x, l(1.000000)
  mul r6.y, r4.x, r4.x
  mad r8.z, r6.y, r5.w, r8.x
  mul r4.x, r4.x, r7.x
  mad r8.x, r6.y, r5.w, r4.x
  mad r8.y, r6.y, r5.w, -r4.x
  dp3 r7.x, r8.zxyz, r5.xyzx
  dp3 r7.y, r8.yzxy, r5.xyzx
  dp3 r7.z, r8.xyzx, r5.xyzx
  movc r5.xyz, r6.xxxx, r7.xyzx, r5.xyzx
  mad r5.xyz, r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000), r5.xyzx
  mul r2.xz, r2.xxzx, r4.yyyy
  mul r2.xz, r2.xxzx, cb3[0].zzzz
  mad r1.w, r1.w, l(2.000000), l(-1.000000)
  mad r5.xz, r2.xxzx, r1.wwww, r5.xxzx
  max r2.y, r2.y, l(0.000000)
  mul r2.y, r4.y, r2.y
  mul r2.y, r2.y, cb3[0].z
  mad r4.x, r2.y, r1.w, r5.y
  mul r4.y, r4.w, l(5.000000)
  add r4.w, -r1.w, l(1.000000)
  mad r4.w, r4.w, l(0.500000), l(0.500000)
  mad r4.x, r4.y, r4.w, r4.x
  mul r7.xyzw, r4.xxxx, cb0[1].xyzw
  mad r7.xyzw, r5.xxxx, cb0[0].xyzw, r7.xyzw
  mad r7.xyzw, r5.zzzz, cb0[2].xyzw, r7.xyzw
  add r7.xyzw, r7.xyzw, cb0[3].xyzw
  mov o0.xyzw, r7.xyzw
  mov o1.xz, r5.xxzx
  mov o1.y, r4.x
  mov o2.xyz, v[0][4].xyzx
  mov o3.xy, v[0][1].xyxx
  mov o3.z, r7.z
  mov o4.xyzw, v[0][3].xyzw
  mov o5.x, l(0)
  emit 
  mad r5.xyz, -r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000), v[1][0].xyzx
  mul r5.xyz, r4.zzzz, r5.xyzx
  dp3 r7.x, r8.zxyz, r5.xyzx
  dp3 r7.y, r8.yzxy, r5.xyzx
  dp3 r7.z, r8.xyzx, r5.xyzx
  movc r5.xyz, r6.xxxx, r7.xyzx, r5.xyzx
  mad r5.xyz, r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000), r5.xyzx
  mad r5.xz, r2.xxzx, r1.wwww, r5.xxzx
  mad r4.x, r2.y, r1.w, r5.y
  mad r4.x, r4.y, r4.w, r4.x
  mul r7.xyzw, r4.xxxx, cb0[1].xyzw
  mad r7.xyzw, r5.xxxx, cb0[0].xyzw, r7.xyzw
  mad r7.xyzw, r5.zzzz, cb0[2].xyzw, r7.xyzw
  add r7.xyzw, r7.xyzw, cb0[3].xyzw
  mov o0.xyzw, r7.xyzw
  mov o1.xz, r5.xxzx
  mov o1.y, r4.x
  mov o2.xyz, v[1][4].xyzx
  mov o3.xy, v[1][1].xyxx
  mov o3.z, r7.z
  mov o4.xyzw, v[1][3].xyzw
  mov o5.x, l(0)
  emit 
  mad r5.xyz, -r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000), v[2][0].xyzx
  mul r5.xyz, r4.zzzz, r5.xyzx
  dp3 r7.x, r8.zxyz, r5.xyzx
  dp3 r7.y, r8.yzxy, r5.xyzx
  dp3 r7.z, r8.xyzx, r5.xyzx
  movc r5.xyz, r6.xxxx, r7.xyzx, r5.xyzx
  mad r5.xyz, r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000), r5.xyzx
  mad r2.xz, r2.xxzx, r1.wwww, r5.xxzx
  mad r1.w, r2.y, r1.w, r5.y
  mad r1.w, r4.y, r4.w, r1.w
  mul r4.xyzw, r1.wwww, cb0[1].xyzw
  mad r4.xyzw, r2.xxxx, cb0[0].xyzw, r4.xyzw
  mad r4.xyzw, r2.zzzz, cb0[2].xyzw, r4.xyzw
  add r4.xyzw, r4.xyzw, cb0[3].xyzw
  mov o0.xyzw, r4.xyzw
  mov o1.xz, r2.xxzx
  mov o1.y, r1.w
  mov o2.xyz, v[2][4].xyzx
  mov o3.xy, v[2][1].xyxx
  mov o3.z, r4.z
  mov o4.xyzw, v[2][3].xyzw
  mov o5.x, l(0)
  emit 
else 
  ieq r2.xy, cb3[1].wwww, l(1, 4, 0, 0)
  or r1.w, r2.y, r2.x
  if_nz r1.w
    add r1.w, -cb3[2].x, cb3[2].y
    mad r2.y, cb3[0].y, r1.w, cb3[2].x
    mul r2.z, cb3[0].x, l(0.363636)
    max r2.z, r2.z, l(0.000000)
    mad r1.w, r2.z, r1.w, cb3[2].x
    movc r1.w, r2.x, r1.w, r2.y
    add r2.x, cb3[3].z, cb3[3].x
    mad r0.y, -r0.y, l(0.333333), r2.x
    lt r2.x, r1.w, r0.y
    if_nz r2.x
      mul r4.xyzw, cb0[1].xyzw, v[0][0].yyyy
      mad r4.xyzw, v[0][0].xxxx, cb0[0].xyzw, r4.xyzw
      mad r4.xyzw, v[0][0].zzzz, cb0[2].xyzw, r4.xyzw
      add r4.xyzw, r4.xyzw, cb0[3].xyzw
      mov o0.xyzw, r4.xyzw
      mov o1.xyz, v[0][0].xyzx
      mov o2.xyz, v[0][4].xyzx
      mov o3.xy, v[0][1].xyxx
      mov o3.z, r4.z
      mov o4.xyzw, v[0][3].xyzw
      mov o5.x, l(2)
      emit 
      mul r4.xyzw, cb0[1].xyzw, v[1][0].yyyy
      mad r4.xyzw, v[1][0].xxxx, cb0[0].xyzw, r4.xyzw
      mad r4.xyzw, v[1][0].zzzz, cb0[2].xyzw, r4.xyzw
      add r4.xyzw, r4.xyzw, cb0[3].xyzw
      mov o0.xyzw, r4.xyzw
      mov o1.xyz, v[1][0].xyzx
      mov o2.xyz, v[1][4].xyzx
      mov o3.xy, v[1][1].xyxx
      mov o3.z, r4.z
      mov o4.xyzw, v[1][3].xyzw
      mov o5.x, l(2)
      emit 
      mul r4.xyzw, cb0[1].xyzw, v[2][0].yyyy
      mad r4.xyzw, v[2][0].xxxx, cb0[0].xyzw, r4.xyzw
      mad r4.xyzw, v[2][0].zzzz, cb0[2].xyzw, r4.xyzw
      add r4.xyzw, r4.xyzw, cb0[3].xyzw
      mov o0.xyzw, r4.xyzw
      mov o1.xyz, v[2][0].xyzx
      mov o2.xyz, v[2][4].xyzx
      mov o3.xy, v[2][1].xyxx
      mov o3.z, r4.z
      mov o4.xyzw, v[2][3].xyzw
      mov o5.x, l(2)
      emit 
    else 
      mul r3.xyzw, r3.xyzw, l(7.725460, 2.465250, 4.325460, 5.975250)
      dp2 r2.x, r3.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
      sincos r2.x, null, r2.x
      mul r2.x, r2.x, l(70124.148438)
      frc r2.x, r2.x
      mad r2.x, r2.x, l(2.000000), l(-1.000000)
      mad r2.x, r2.x, l(0.500000), l(0.500000)
      dp2 r2.y, r3.zwzz, l(472.899994, 133.699997, 0.000000, 0.000000)
      sincos r2.y, null, r2.y
      mul r2.y, r2.y, l(70124.148438)
      frc r2.y, r2.y
      mad r2.y, r2.y, l(2.000000), l(-1.000000)
      iadd r3.xy, vPrim, l(5, 7, 0, 0)
      utof r3.xy, r3.xyxx
      mul r3.xy, r1.xyxx, r3.xyxx
      mul r3.xy, r3.xyxx, l(9.135460, 7.835250, 0.000000, 0.000000)
      dp2 r2.z, r3.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
      sincos r2.z, null, r2.z
      mul r2.z, r2.z, l(70124.148438)
      frc r2.z, r2.z
      mad r2.z, r2.z, l(2.000000), l(-1.000000)
      mad r2.z, r2.z, l(0.500000), l(0.500000)
      add r0.y, r0.y, -r1.w
      mad r0.y, -r2.w, l(0.050000), r0.y
      mov r3.y, -r0.y
      mad r0.xy, r0.xzxx, l(0.333333, 0.333333, 0.000000, 0.000000), -cb3[3].ywyy
      dp2 r0.z, r0.xyxx, r0.xyxx
      rsq r1.w, r0.z
      mul r0.xy, r0.xyxx, r1.wwww
      sqrt r0.z, r0.z
      mad r0.z, r2.y, l(0.150000), r0.z
      mad r1.xz, r0.xxyx, r0.zzzz, cb3[3].yywy
      mov r3.xz, l(0,0,0,0)
      add r0.xyz, r1.xyzx, r3.xyzx
      sqrt r0.w, r0.w
      sqrt r0.w, r0.w
      mul r1.x, r0.w, l(0.750000)
      mad r1.yzw, r2.zzzz, l(0.000000, 0.054688, -0.574219, 0.019531), l(0.000000, 0.289062, 0.863281, 0.843750)
      ge r2.x, l(0.050000), r2.x
      and r2.x, r2.x, l(0x3f800000)
      add r2.y, r0.y, -cb3[3].z
      add r2.y, r2.y, -cb3[2].z
      add r2.z, -cb3[2].z, cb3[2].w
      div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
      mul_sat r2.y, r2.y, r2.z
      add r3.xyz, r0.xyzx, -cb0[5].xyzx
      dp3 r2.z, r3.xyzx, r3.xyzx
      rsq r2.z, r2.z
      mul r3.xyz, r2.zzzz, r3.xyzx
      mul r4.xyz, r3.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000)
      mad r4.xyz, r3.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000), -r4.xyzx
      dp2 r2.z, r4.xzxx, r4.xzxx
      rsq r2.z, r2.z
      mul r4.xyz, r2.zzzz, r4.xyzx
      mul r5.xyz, r3.zxyz, r4.yzxy
      mad r5.xyz, r3.yzxy, r4.zxyz, -r5.xyzx
      dp3 r2.z, r5.xyzx, r5.xyzx
      rsq r2.z, r2.z
      mul r5.xyz, r2.zzzz, r5.xyzx
      mul r0.w, r0.w, r2.y
      mul r6.xyz, r0.wwww, l(-0.750000, -0.750000, 0.750000, 0.000000)
      mul r7.xyz, r5.xyzx, r6.xxxx
      mad r7.xyz, r6.xxxx, r4.xyzx, r7.xyzx
      add r7.xyz, r0.xyzx, r7.xyzx
      mul r8.xyzw, r7.yyyy, cb0[1].xyzw
      mad r8.xyzw, r7.xxxx, cb0[0].xyzw, r8.xyzw
      mad r8.xyzw, r7.zzzz, cb0[2].xyzw, r8.xyzw
      add r8.xyzw, r8.xyzw, cb0[3].xyzw
      mov o0.xyzw, r8.xyzw
      mov o1.xyz, r7.xyzx
      mov o2.xyz, r3.xyzx
      mov o3.xy, l(0,1.000000,0,0)
      mov o3.z, r8.z
      mov o4.xyz, r1.yzwy
      mov o4.w, r2.x
      mov o5.x, l(1)
      emit 
      mul r7.xyz, r5.xyzx, r6.zzzz
      mad r7.xyz, r6.yyyy, r4.xyzx, r7.xyzx
      add r7.xyz, r0.xyzx, r7.xyzx
      mul r8.xyzw, r7.yyyy, cb0[1].xyzw
      mad r8.xyzw, r7.xxxx, cb0[0].xyzw, r8.xyzw
      mad r8.xyzw, r7.zzzz, cb0[2].xyzw, r8.xyzw
      add r8.xyzw, r8.xyzw, cb0[3].xyzw
      mov o0.xyzw, r8.xyzw
      mov o1.xyz, r7.xyzx
      mov o2.xyz, r3.xyzx
      mov o3.xy, l(0,0,0,0)
      mov o3.z, r8.z
      mov o4.xyz, r1.yzwy
      mov o4.w, r2.x
      mov o5.x, l(1)
      emit 
      mul r6.xyw, r5.xyxz, r6.yyyy
      mad r6.xyz, r6.zzzz, r4.xyzx, r6.xywx
      add r6.xyz, r0.xyzx, r6.xyzx
      mul r7.xyzw, r6.yyyy, cb0[1].xyzw
      mad r7.xyzw, r6.xxxx, cb0[0].xyzw, r7.xyzw
      mad r7.xyzw, r6.zzzz, cb0[2].xyzw, r7.xyzw
      add r7.xyzw, r7.xyzw, cb0[3].xyzw
      mov o0.xyzw, r7.xyzw
      mov o1.xyz, r6.xyzx
      mov o2.xyz, r3.xyzx
      mov o3.xy, l(1.000000,1.000000,0,0)
      mov o3.z, r7.z
      mov o4.xyz, r1.yzwy
      mov o4.w, r2.x
      mov o5.x, l(1)
      emit 
      mul r0.w, r1.x, r2.y
      mul r2.yzw, r5.xxyz, r0.wwww
      mad r2.yzw, r0.wwww, r4.xxyz, r2.yyzw
      add r0.xyz, r0.xyzx, r2.yzwy
      mul r4.xyzw, r0.yyyy, cb0[1].xyzw
      mad r4.xyzw, r0.xxxx, cb0[0].xyzw, r4.xyzw
      mad r4.xyzw, r0.zzzz, cb0[2].xyzw, r4.xyzw
      add r4.xyzw, r4.xyzw, cb0[3].xyzw
      mov o0.xyzw, r4.xyzw
      mov o1.xyz, r0.xyzx
      mov o2.xyz, r3.xyzx
      mov o3.xy, l(1.000000,0,0,0)
      mov o3.z, r4.z
      mov o4.xyz, r1.yzwy
      mov o4.w, r2.x
      mov o5.x, l(1)
      emit 
    endif 
  endif 
endif 
cut 
ret 
// Approximately 306 instruction slots used
