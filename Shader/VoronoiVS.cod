//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   float4 lightDirection;             // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16 [unused]
//
// }
//
// cbuffer CbMesh
// {
//
//   row_major float4x4 boneTransforms[128];// Offset:    0 Size:  8192
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbMesh                            cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyz         2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
// WEIGHTS                  0   xyzw        5     NONE   float   xyzw
// BONES                    0   xyzw        6     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// DEPTH                    0     z         2     NONE   float     z 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TANGENT                  0   xyz         4     NONE   float   xyz 
// BINORMAL                 0   xyz         5     NONE   float   xyz 
// NORMAL                   0   xyz         6     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[512], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xy
dcl_output o2.z
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyz
dcl_temps 3
ishl r0.xyzw, v6.xyzw, l(2, 2, 2, 2)
mul r1.xyz, v0.yyyy, cb1[r0.y + 1].xyzx
mad r1.xyz, v0.xxxx, cb1[r0.y + 0].xyzx, r1.xyzx
mad r1.xyz, v0.zzzz, cb1[r0.y + 2].xyzx, r1.xyzx
mad r1.xyz, v0.wwww, cb1[r0.y + 3].xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, v5.yyyy
mul r2.xyz, v0.yyyy, cb1[r0.x + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r0.x + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r0.x + 2].xyzx, r2.xyzx
mad r2.xyz, v0.wwww, cb1[r0.x + 3].xyzx, r2.xyzx
mad r1.xyz, v5.xxxx, r2.xyzx, r1.xyzx
mul r2.xyz, v0.yyyy, cb1[r0.z + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r0.z + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r0.z + 2].xyzx, r2.xyzx
mad r2.xyz, v0.wwww, cb1[r0.z + 3].xyzx, r2.xyzx
mad r1.xyz, v5.zzzz, r2.xyzx, r1.xyzx
mul r2.xyz, v0.yyyy, cb1[r0.w + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r0.w + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r0.w + 2].xyzx, r2.xyzx
mad r2.xyz, v0.wwww, cb1[r0.w + 3].xyzx, r2.xyzx
mad r1.xyz, v5.wwww, r2.xyzx, r1.xyzx
mul r2.xyzw, r1.yyyy, cb0[1].xyzw
mad r2.xyzw, r1.xxxx, cb0[0].xyzw, r2.xyzw
mad r2.xyzw, r1.zzzz, cb0[2].xyzw, r2.xyzw
mov o1.xyz, r1.xyzx
add r1.xyzw, r2.xyzw, cb0[3].xyzw
mov o0.xyzw, r1.xyzw
mov o2.z, r1.z
mov o2.xy, v3.xyxx
mov o3.xyzw, v4.xyzw
mul r1.xyz, v1.yyyy, cb1[r0.y + 1].xyzx
mad r1.xyz, v1.xxxx, cb1[r0.y + 0].xyzx, r1.xyzx
mad r1.xyz, v1.zzzz, cb1[r0.y + 2].xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, v5.yyyy
mul r2.xyz, v1.yyyy, cb1[r0.x + 1].xyzx
mad r2.xyz, v1.xxxx, cb1[r0.x + 0].xyzx, r2.xyzx
mad r2.xyz, v1.zzzz, cb1[r0.x + 2].xyzx, r2.xyzx
mad r1.xyz, v5.xxxx, r2.xyzx, r1.xyzx
mul r2.xyz, v1.yyyy, cb1[r0.z + 1].xyzx
mad r2.xyz, v1.xxxx, cb1[r0.z + 0].xyzx, r2.xyzx
mad r0.xyz, v1.zzzz, cb1[r0.z + 2].xyzx, r2.xyzx
mad r0.xyz, v5.zzzz, r0.xyzx, r1.xyzx
mul r1.xyz, v1.yyyy, cb1[r0.w + 1].xyzx
mad r1.xyz, v1.xxxx, cb1[r0.w + 0].xyzx, r1.xyzx
mad r1.xyz, v1.zzzz, cb1[r0.w + 2].xyzx, r1.xyzx
mad r0.xyz, v5.wwww, r1.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.yzxy, l(0.001000, 0.000000, 1.000000, 0.000000)
mad r1.xyz, r0.zxyz, l(1.000000, 0.001000, 0.000000, 0.000000), -r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mov o4.xyz, r1.xyzx
mul r2.xyz, r0.zxyz, r1.yzxy
mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
mov o6.xyz, r0.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul o5.xyz, r0.xxxx, r1.xyzx
ret 
// Approximately 62 instruction slots used
