//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for X_buffer
// {
//
//   struct Velocity
//   {
//       
//       float velocity;                // Offset:    0
//       float after;                   // Offset:    4
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for Y_buffer
// {
//
//   struct Velocity
//   {
//       
//       float velocity;                // Offset:    0
//       float after;                   // Offset:    4
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// X_buffer                              UAV  struct         r/w             u0      1 
// Y_buffer                              UAV  struct         r/w             u1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_uav_structured u0, 8
dcl_uav_structured u1, 8
dcl_input vThreadID.xy
dcl_temps 1
dcl_thread_group 2, 2, 1
imul null, r0.xyz, vThreadID.xyyx, l(11, 143, 132, 0)
iadd r0.xy, r0.yzyy, r0.xxxx
store_structured u0.x, r0.x, l(0), l(0)
iadd r0.zw, r0.xxxy, l(0, 0, 1, 12)
store_structured u0.x, r0.z, l(0), l(0)
store_structured u1.x, r0.y, l(0), l(0)
store_structured u1.x, r0.w, l(0), l(0)
ret 
// Approximately 8 instruction slots used
