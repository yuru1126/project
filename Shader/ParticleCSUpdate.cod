//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PARTICLE_CONSTANTS
// {
//
//   uint particle_count;               // Offset:    0 Size:     4
//   float particle_size;               // Offset:    4 Size:     4 [unused]
//   float elapsed_time;                // Offset:    8 Size:     4
//   float Progress_time;               // Offset:   12 Size:     4
//   float4 setHSV;                     // Offset:   16 Size:    16 [unused]
//   float divide_length;               // Offset:   32 Size:     4
//   int count;                         // Offset:   36 Size:     4 [unused]
//   float2 dummy;                      // Offset:   40 Size:     8 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64 [unused]
//   float4 camera_position;            // Offset:   64 Size:    16
//
// }
//
// cbuffer CbParticle
// {
//
//   struct ParticleData
//   {
//       
//       float4 position_max;           // Offset:    0
//       float4 position_min;           // Offset:   16
//       float4 velocity_max;           // Offset:   32
//       float4 velocity_min;           // Offset:   48
//       float4 color_max;              // Offset:   64
//       float4 color_min;              // Offset:   80
//       float2 lifespan;               // Offset:   96
//       float set_divide_age;          // Offset:  104
//       float gravity;                 // Offset:  108
//       float draw_size;               // Offset:  112
//       float animation_speed;         // Offset:  116
//       float length_shrink_flag;      // Offset:  120
//       float appearance_frequency;    // Offset:  124
//       float4 dummyF1;                // Offset:  128
//       int draw_type;                 // Offset:  144
//       int3 tiles;                    // Offset:  148
//       int2 set_tiles;                // Offset:  160
//       int set_state;                 // Offset:  168
//       int hsv_data_flag;             // Offset:  172
//       int velocity_normalize_flag;   // Offset:  176
//       int3 dummyI1;                  // Offset:  180
//
//   } particle_data;                   // Offset:    0 Size:   192 [unused]
//   
//   struct ParticleData
//   {
//       
//       float4 position_max;           // Offset:  192
//       float4 position_min;           // Offset:  208
//       float4 velocity_max;           // Offset:  224
//       float4 velocity_min;           // Offset:  240
//       float4 color_max;              // Offset:  256
//       float4 color_min;              // Offset:  272
//       float2 lifespan;               // Offset:  288
//       float set_divide_age;          // Offset:  296
//       float gravity;                 // Offset:  300
//       float draw_size;               // Offset:  304
//       float animation_speed;         // Offset:  308
//       float length_shrink_flag;      // Offset:  312
//       float appearance_frequency;    // Offset:  316
//       float4 dummyF1;                // Offset:  320
//       int draw_type;                 // Offset:  336
//       int3 tiles;                    // Offset:  340
//       int2 set_tiles;                // Offset:  352
//       int set_state;                 // Offset:  360
//       int hsv_data_flag;             // Offset:  364
//       int velocity_normalize_flag;   // Offset:  368
//       int3 dummyI1;                  // Offset:  372
//
//   } death_emitter_data;              // Offset:  192 Size:   192
//   
//   struct ParticleData
//   {
//       
//       float4 position_max;           // Offset:  384
//       float4 position_min;           // Offset:  400
//       float4 velocity_max;           // Offset:  416
//       float4 velocity_min;           // Offset:  432
//       float4 color_max;              // Offset:  448
//       float4 color_min;              // Offset:  464
//       float2 lifespan;               // Offset:  480
//       float set_divide_age;          // Offset:  488
//       float gravity;                 // Offset:  492
//       float draw_size;               // Offset:  496
//       float animation_speed;         // Offset:  500
//       float length_shrink_flag;      // Offset:  504
//       float appearance_frequency;    // Offset:  508
//       float4 dummyF1;                // Offset:  512
//       int draw_type;                 // Offset:  528
//       int3 tiles;                    // Offset:  532
//       int2 set_tiles;                // Offset:  544
//       int set_state;                 // Offset:  552
//       int hsv_data_flag;             // Offset:  556
//       int velocity_normalize_flag;   // Offset:  560
//       int3 dummyI1;                  // Offset:  564
//
//   } survival_emitter_data;           // Offset:  384 Size:   192
//   int sub_emitter_flag;              // Offset:  576 Size:     4 [unused]
//   float3 dummy2;                     // Offset:  580 Size:    12 [unused]
//
// }
//
// Resource bind info for particle_buffer
// {
//
//   struct particle
//   {
//       
//       float4 position;               // Offset:    0
//       float4 velocity;               // Offset:   16
//       float4 normal;                 // Offset:   32
//       float4 color;                  // Offset:   48
//       float gravity;                 // Offset:   64
//       float age;                     // Offset:   68
//       float2 length_shrink;          // Offset:   72
//       float size;                    // Offset:   80
//       float divide_age;              // Offset:   84
//       float use_tile;                // Offset:   88
//       float animation_speed;         // Offset:   92
//       float appearance_timer;        // Offset:   96
//       float appearance_frequency;    // Offset:  100
//       float2 dummyF;                 // Offset:  104
//       int draw_type;                 // Offset:  112
//       int3 tiles;                    // Offset:  116
//       int state;                     // Offset:  128
//       int sub_emitter_flag;          // Offset:  132
//       int2 dummyI;                   // Offset:  136
//
//   } $Element;                        // Offset:    0 Size:   144
//
// }
//
// Resource bind info for append_particle_buffer
// {
//
//   struct particle
//   {
//       
//       float4 position;               // Offset:    0
//       float4 velocity;               // Offset:   16
//       float4 normal;                 // Offset:   32
//       float4 color;                  // Offset:   48
//       float gravity;                 // Offset:   64
//       float age;                     // Offset:   68
//       float2 length_shrink;          // Offset:   72
//       float size;                    // Offset:   80
//       float divide_age;              // Offset:   84
//       float use_tile;                // Offset:   88
//       float animation_speed;         // Offset:   92
//       float appearance_timer;        // Offset:   96
//       float appearance_frequency;    // Offset:  100
//       float2 dummyF;                 // Offset:  104
//       int draw_type;                 // Offset:  112
//       int3 tiles;                    // Offset:  116
//       int state;                     // Offset:  128
//       int sub_emitter_flag;          // Offset:  132
//       int2 dummyI;                   // Offset:  136
//
//   } $Element;                        // Offset:    0 Size:   144
//
// }
//
// Resource bind info for count_buffer
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// particle_buffer                       UAV  struct         r/w             u0      1 
// append_particle_buffer                UAV  struct      append             u3      1 
// count_buffer                          UAV  struct      append             u4      1 
// PARTICLE_CONSTANTS                cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
// CbParticle                        cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_constantbuffer CB1[5], immediateIndexed
dcl_constantbuffer CB2[36], immediateIndexed
dcl_uav_structured u0, 144
dcl_uav_structured u3, 144
dcl_uav_structured u4, 4
dcl_input vThreadID.x
dcl_temps 20
dcl_thread_group 256, 1, 1
uge r0.x, cb0[0].x, vThreadID.x
if_nz r0.x
  ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r0.x, vThreadID.x, l(68), u0.xxxx
  lt r0.x, l(0.000000), r0.x
  if_nz r0.x
    ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(0), u0.xyzw
    ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r1.xyzw, vThreadID.x, l(16), u0.yxzw
    ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r2.xyz, vThreadID.x, l(32), u0.xyzx
    ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r3.xyzw, vThreadID.x, l(48), u0.wxyz
    ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r4.xyzw, vThreadID.x, l(64), u0.yzwx
    ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r5.xyzw, vThreadID.x, l(84), u0.ywxz
    ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r2.w, vThreadID.x, l(100), u0.xxxx
    ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r6.xyz, vThreadID.x, l(124), u0.xyzx
    if_z r6.y
      add r4.x, r4.x, -cb0[0].z
      ge r6.y, l(0.000000), r4.x
      if_nz r6.y
        ieq r6.yw, r6.zzzz, l(0, 1, 0, 3)
        if_nz r6.y
          mad r6.y, r1.x, l(21.989000), r1.y
          mad r6.y, r1.z, l(37.741001), r6.y
          add r6.y, r6.y, cb0[0].w
          add r7.xyzw, r6.yyyy, l(11.000000, 12.000000, 13.000000, 14.000000)
          dp2 r7.x, r7.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
          sincos r7.x, null, r7.x
          mul r7.x, r7.x, l(70124.148438)
          frc r7.x, r7.x
          mad r7.x, r7.x, l(2.000000), l(-1.000000)
          mad r8.x, r7.x, l(0.500000), l(0.500000)
          dp2 r7.x, r7.zwzz, l(472.899994, 133.699997, 0.000000, 0.000000)
          sincos r7.x, null, r7.x
          mul r7.x, r7.x, l(70124.148438)
          frc r7.x, r7.x
          mad r7.x, r7.x, l(2.000000), l(-1.000000)
          mad r8.y, r7.x, l(0.500000), l(0.500000)
          add r7.xy, r6.yyyy, l(15.000000, 16.000000, 0.000000, 0.000000)
          dp2 r7.x, r7.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
          sincos r7.x, null, r7.x
          mul r7.x, r7.x, l(70124.148438)
          frc r7.x, r7.x
          mad r7.x, r7.x, l(2.000000), l(-1.000000)
          mad r8.z, r7.x, l(0.500000), l(0.500000)
          itof r7.x, cb2[23].x
          mov_sat r7.x, r7.x
          add r9.xyzw, cb2[14].xyzw, -cb2[15].xyzw
          add r7.yzw, cb2[16].xxyz, -cb2[17].xxyz
          mad r7.yzw, r8.xxyz, r7.yyzw, cb2[17].xxyz
          eq r8.x, r7.z, l(0.000000)
          add r8.y, -cb2[18].x, cb2[18].y
          mul r8.z, r7.y, l(360.000000)
          ge r8.z, r8.z, -r8.z
          movc r8.zw, r8.zzzz, l(0,0,360.000000,0.002778), l(0,0,-360.000000,-0.002778)
          mul r8.w, r7.y, r8.w
          frc r8.w, r8.w
          mul r8.z, r8.w, r8.z
          mul r8.w, r8.z, l(0.016667)
          round_z r8.w, r8.w
          mad r8.z, r8.z, l(0.016667), -r8.w
          add r10.x, -r7.z, l(1.000000)
          mul r10.y, r7.w, r10.x
          mad r11.x, -r7.z, r8.z, l(1.000000)
          mul r10.z, r7.w, r11.x
          add r8.z, -r8.z, l(1.000000)
          mad r8.z, -r7.z, r8.z, l(1.000000)
          mul r10.x, r7.w, r8.z
          eq r11.xyzw, r8.wwww, l(0.000000, 1.000000, 2.000000, 3.000000)
          eq r8.zw, r8.wwww, l(0.000000, 0.000000, 4.000000, 5.000000)
          mov r10.w, r7.w
          and r12.xyz, r10.wyzw, r8.wwww
          movc r12.xyz, r8.zzzz, r10.xywx, r12.xyzx
          movc r12.xyz, r11.wwww, r10.yzwy, r12.xyzx
          movc r12.xyz, r11.zzzz, r10.ywxy, r12.xyzx
          movc r11.yzw, r11.yyyy, r10.zzwy, r12.xxyz
          movc r10.xyz, r11.xxxx, r10.wxyw, r11.yzwy
          max r11.y, cb2[18].z, l(0.001000)
          iadd r8.z, -cb2[22].x, cb2[22].y
          itof r8.z, r8.z
          itof r8.w, cb2[22].x
          mov r12.w, l(0)
          mov r13.w, l(1.000000)
          mov r14.x, cb2[18].w
          mov r14.zw, cb2[19].zzzz
          mov r11.xw, cb2[19].xxxy
          mov r15.x, cb2[19].w
          mov r15.z, l(0)
          mov r16.x, cb2[22].z
          mov r16.yzw, l(0,0,0,0)
          mov r10.w, l(0)
          loop 
            uge r15.y, r10.w, l(128)
            breakc_nz r15.y
            utof r15.y, r10.w
            add r15.y, r6.y, r15.y
            add r17.xyzw, r15.yyyy, l(1.000000, 2.000000, 3.000000, 4.000000)
            dp2 r15.w, r17.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
            sincos r15.w, null, r15.w
            mul r15.w, r15.w, l(70124.148438)
            frc r15.w, r15.w
            mad r15.w, r15.w, l(2.000000), l(-1.000000)
            mad r18.x, r15.w, l(0.500000), l(0.500000)
            dp2 r15.w, r17.zwzz, l(472.899994, 133.699997, 0.000000, 0.000000)
            sincos r15.w, null, r15.w
            mul r15.w, r15.w, l(70124.148438)
            frc r15.w, r15.w
            mad r15.w, r15.w, l(2.000000), l(-1.000000)
            mad r18.y, r15.w, l(0.500000), l(0.500000)
            add r17.xyzw, r15.yyyy, l(5.000000, 6.000000, 9.000000, 10.000000)
            dp2 r15.w, r17.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
            sincos r15.w, null, r15.w
            mul r15.w, r15.w, l(70124.148438)
            frc r15.w, r15.w
            mad r15.w, r15.w, l(2.000000), l(-1.000000)
            mad r18.z, r15.w, l(0.500000), l(0.500000)
            dp2 r15.w, r17.zwzz, l(472.899994, 133.699997, 0.000000, 0.000000)
            sincos r15.w, null, r15.w
            mul r15.w, r15.w, l(70124.148438)
            frc r15.w, r15.w
            mad r15.w, r15.w, l(2.000000), l(-1.000000)
            mad r15.w, r15.w, l(0.500000), l(0.500000)
            add r17.xyzw, r15.yyyy, l(18.000000, 19.000000, 7.000000, 8.000000)
            dp2 r15.y, r17.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
            sincos r15.y, null, r15.y
            mul r15.y, r15.y, l(70124.148438)
            frc r15.y, r15.y
            mad r15.y, r15.y, l(2.000000), l(-1.000000)
            mad r15.y, r15.y, l(0.500000), l(0.500000)
            mad r18.xyz, r18.xyzx, r9.xyzx, cb2[15].xyzx
            dp3 r17.x, r18.xyzx, r18.xyzx
            sqrt r17.y, r17.x
            lt r17.y, l(0.000000), r17.y
            mad r15.w, r15.w, r9.w, cb2[15].w
            rsq r17.x, r17.x
            mul r19.xyz, r17.xxxx, r18.xyzx
            mad r19.xyz, r19.xyzx, r15.wwww, -r18.xyzx
            mad r19.xyz, r7.xxxx, r19.xyzx, r18.xyzx
            movc r12.xyz, r17.yyyy, r19.xyzx, r18.xyzx
            if_nz cb2[22].w
              if_nz r8.x
                mov r13.xyz, r7.wwww
              else 
                mov r13.xyz, r10.xyzx
              endif 
            else 
              mov r13.xyz, r7.yzwy
            endif 
            mad r14.y, r15.y, r8.y, cb2[18].x
            dp2 r15.y, r17.zwzz, l(472.899994, 133.699997, 0.000000, 0.000000)
            sincos r15.y, null, r15.y
            mul r15.y, r15.y, l(70124.148438)
            frc r15.y, r15.y
            mad r15.y, r15.y, l(2.000000), l(-1.000000)
            mad r15.y, r15.y, l(0.500000), l(0.500000)
            mul r15.y, r8.z, r15.y
            round_ne r15.y, r15.y
            add r11.z, r8.w, r15.y
            imm_atomic_alloc r17.x, u3
            store_structured u3.xyzw, r17.x, l(0), r0.xyzw
            store_structured u3.xyzw, r17.x, l(16), r12.xyzw
            store_structured u3.xyzw, r17.x, l(32), l(0,0,1.000000,0)
            store_structured u3.xyzw, r17.x, l(48), r13.xyzw
            store_structured u3.xyzw, r17.x, l(64), r14.xyzw
            store_structured u3.xyzw, r17.x, l(80), r11.xyzw
            store_structured u3.xyzw, r17.x, l(96), r15.xxzz
            store_structured u3.xyzw, r17.x, l(112), cb2[21].xyzw
            store_structured u3.xyzw, r17.x, l(128), r16.xyzw
            iadd r10.w, r10.w, l(1)
          endloop 
        endif 
        if_nz r6.w
          mad r6.y, r1.x, l(21.989000), r1.y
          mad r6.y, r1.z, l(37.741001), r6.y
          add r6.y, r6.y, cb0[0].w
          add r7.xyzw, r6.yyyy, l(11.000000, 12.000000, 13.000000, 14.000000)
          dp2 r6.w, r7.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
          sincos r6.w, null, r6.w
          mul r6.w, r6.w, l(70124.148438)
          frc r6.w, r6.w
          mad r6.w, r6.w, l(2.000000), l(-1.000000)
          mad r8.x, r6.w, l(0.500000), l(0.500000)
          dp2 r6.w, r7.zwzz, l(472.899994, 133.699997, 0.000000, 0.000000)
          sincos r6.w, null, r6.w
          mul r6.w, r6.w, l(70124.148438)
          frc r6.w, r6.w
          mad r6.w, r6.w, l(2.000000), l(-1.000000)
          mad r8.y, r6.w, l(0.500000), l(0.500000)
          add r7.xy, r6.yyyy, l(15.000000, 16.000000, 0.000000, 0.000000)
          dp2 r6.w, r7.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
          sincos r6.w, null, r6.w
          mul r6.w, r6.w, l(70124.148438)
          frc r6.w, r6.w
          mad r6.w, r6.w, l(2.000000), l(-1.000000)
          mad r8.z, r6.w, l(0.500000), l(0.500000)
          itof r6.w, cb2[23].x
          mov_sat r6.w, r6.w
          add r7.xyzw, cb2[14].xyzw, -cb2[15].xyzw
          add r9.xyz, cb2[16].xyzx, -cb2[17].xyzx
          mad r8.xyz, r8.xyzx, r9.xyzx, cb2[17].xyzx
          eq r8.w, r8.y, l(0.000000)
          add r9.x, -cb2[18].x, cb2[18].y
          mul r9.y, r8.x, l(360.000000)
          ge r9.y, r9.y, -r9.y
          movc r9.yz, r9.yyyy, l(0,360.000000,0.002778,0), l(0,-360.000000,-0.002778,0)
          mul r9.z, r8.x, r9.z
          frc r9.z, r9.z
          mul r9.y, r9.z, r9.y
          mul r9.z, r9.y, l(0.016667)
          round_z r9.z, r9.z
          mad r9.y, r9.y, l(0.016667), -r9.z
          add r9.w, -r8.y, l(1.000000)
          mul r10.y, r8.z, r9.w
          mad r9.w, -r8.y, r9.y, l(1.000000)
          add r9.y, -r9.y, l(1.000000)
          mad r9.y, -r8.y, r9.y, l(1.000000)
          mul r10.xz, r8.zzzz, r9.yywy
          eq r11.xyzw, r9.zzzz, l(0.000000, 1.000000, 2.000000, 3.000000)
          eq r9.yz, r9.zzzz, l(0.000000, 4.000000, 5.000000, 0.000000)
          mov r10.w, r8.z
          and r12.xyz, r10.wyzw, r9.zzzz
          movc r9.yzw, r9.yyyy, r10.xxyw, r12.xxyz
          movc r9.yzw, r11.wwww, r10.yyzw, r9.yyzw
          movc r9.yzw, r11.zzzz, r10.yywx, r9.yyzw
          movc r9.yzw, r11.yyyy, r10.zzwy, r9.yyzw
          movc r9.yzw, r11.xxxx, r10.wwxy, r9.yyzw
          max r10.y, cb2[18].z, l(0.001000)
          iadd r11.x, -cb2[22].x, cb2[22].y
          itof r11.x, r11.x
          itof r11.y, cb2[22].x
          mov r12.w, l(0)
          mov r13.w, l(1.000000)
          mov r14.x, cb2[18].w
          mov r14.zw, cb2[19].zzzz
          mov r10.xw, cb2[19].xxxy
          mov r15.x, cb2[19].w
          mov r15.z, l(0)
          mov r16.x, cb2[22].z
          mov r16.yzw, l(0,2,0,0)
          mov r11.z, l(0)
          loop 
            uge r11.w, r11.z, l(128)
            breakc_nz r11.w
            utof r11.w, r11.z
            add r11.w, r6.y, r11.w
            add r17.xyzw, r11.wwww, l(1.000000, 2.000000, 3.000000, 4.000000)
            dp2 r15.y, r17.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
            sincos r15.y, null, r15.y
            mul r15.y, r15.y, l(70124.148438)
            frc r15.y, r15.y
            mad r15.y, r15.y, l(2.000000), l(-1.000000)
            mad r18.x, r15.y, l(0.500000), l(0.500000)
            dp2 r15.y, r17.zwzz, l(472.899994, 133.699997, 0.000000, 0.000000)
            sincos r15.y, null, r15.y
            mul r15.y, r15.y, l(70124.148438)
            frc r15.y, r15.y
            mad r15.y, r15.y, l(2.000000), l(-1.000000)
            mad r18.y, r15.y, l(0.500000), l(0.500000)
            add r17.xyzw, r11.wwww, l(5.000000, 6.000000, 9.000000, 10.000000)
            dp2 r15.y, r17.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
            sincos r15.y, null, r15.y
            mul r15.y, r15.y, l(70124.148438)
            frc r15.y, r15.y
            mad r15.y, r15.y, l(2.000000), l(-1.000000)
            mad r18.z, r15.y, l(0.500000), l(0.500000)
            dp2 r15.y, r17.zwzz, l(472.899994, 133.699997, 0.000000, 0.000000)
            sincos r15.y, null, r15.y
            mul r15.y, r15.y, l(70124.148438)
            frc r15.y, r15.y
            mad r15.y, r15.y, l(2.000000), l(-1.000000)
            mad r15.y, r15.y, l(0.500000), l(0.500000)
            add r17.xyzw, r11.wwww, l(18.000000, 19.000000, 7.000000, 8.000000)
            dp2 r11.w, r17.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
            sincos r11.w, null, r11.w
            mul r11.w, r11.w, l(70124.148438)
            frc r11.w, r11.w
            mad r11.w, r11.w, l(2.000000), l(-1.000000)
            mad r11.w, r11.w, l(0.500000), l(0.500000)
            mad r18.xyz, r18.xyzx, r7.xyzx, cb2[15].xyzx
            dp3 r15.w, r18.xyzx, r18.xyzx
            sqrt r17.x, r15.w
            lt r17.x, l(0.000000), r17.x
            mad r15.y, r15.y, r7.w, cb2[15].w
            rsq r15.w, r15.w
            mul r19.xyz, r15.wwww, r18.xyzx
            mad r19.xyz, r19.xyzx, r15.yyyy, -r18.xyzx
            mad r19.xyz, r6.wwww, r19.xyzx, r18.xyzx
            movc r12.xyz, r17.xxxx, r19.xyzx, r18.xyzx
            if_nz cb2[22].w
              if_nz r8.w
                mov r13.xyz, r8.zzzz
              else 
                mov r13.xyz, r9.yzwy
              endif 
            else 
              mov r13.xyz, r8.xyzx
            endif 
            mad r14.y, r11.w, r9.x, cb2[18].x
            dp2 r11.w, r17.zwzz, l(472.899994, 133.699997, 0.000000, 0.000000)
            sincos r11.w, null, r11.w
            mul r11.w, r11.w, l(70124.148438)
            frc r11.w, r11.w
            mad r11.w, r11.w, l(2.000000), l(-1.000000)
            mad r11.w, r11.w, l(0.500000), l(0.500000)
            mul r11.w, r11.x, r11.w
            round_ne r11.w, r11.w
            add r10.z, r11.w, r11.y
            imm_atomic_alloc r17.x, u3
            store_structured u3.xyzw, r17.x, l(0), r0.xyzw
            store_structured u3.xyzw, r17.x, l(16), r12.xyzw
            store_structured u3.xyzw, r17.x, l(32), l(0,0,1.000000,0)
            store_structured u3.xyzw, r17.x, l(48), r13.xyzw
            store_structured u3.xyzw, r17.x, l(64), r14.xyzw
            store_structured u3.xyzw, r17.x, l(80), r10.xyzw
            store_structured u3.xyzw, r17.x, l(96), r15.xxzz
            store_structured u3.xyzw, r17.x, l(112), cb2[21].xyzw
            store_structured u3.xyzw, r17.x, l(128), r16.xyzw
            iadd r11.z, r11.z, l(1)
          endloop 
        endif 
        imm_atomic_alloc r7.x, u4
        store_structured u4.x, r7.x, l(0), vThreadID.x
        mov r3.x, l(0)
        mov r4.z, l(0)
      endif 
      add r7.xyz, r0.xyzx, -cb1[4].xyzx
      dp3 r6.y, r7.xyzx, r7.xyzx
      sqrt r6.w, r6.y
      div_sat r6.w, r6.w, cb0[2].x
      add r7.w, -r4.z, l(1.000000)
      max r6.w, r6.w, r7.w
      div_sat r5.z, r4.x, r5.z
      mul r4.y, r5.z, r6.w
      rsq r5.z, r6.y
      mul r2.xyz, r5.zzzz, r7.xyzx
      mad r0.xyzw, r1.yxzw, cb0[0].zzzz, r0.xyzw
      mul r1.w, r4.w, cb0[0].z
      mad r1.x, -r1.w, l(9.800000), r1.x
      mad r1.w, r5.w, cb0[0].z, r5.x
      itof r4.w, r6.x
      ge r4.w, r4.w, r1.w
      and r4.w, r4.w, l(0x3f800000)
      mul r5.x, r1.w, r4.w
      ieq r1.w, r6.z, l(2)
      if_nz r1.w
        add r5.y, r5.y, -cb0[0].z
        ge r1.w, l(0.000000), r5.y
        if_nz r1.w
          add r5.y, r2.w, r5.y
          mad r1.y, r1.x, l(21.989000), r1.y
          mad r1.y, r1.z, l(37.741001), r1.y
          add r1.y, r1.y, cb0[0].w
          add r6.xyzw, r1.yyyy, l(1.000000, 2.000000, 3.000000, 4.000000)
          dp2 r1.z, r6.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
          sincos r1.z, null, r1.z
          mul r1.z, r1.z, l(70124.148438)
          frc r1.z, r1.z
          mad r1.z, r1.z, l(2.000000), l(-1.000000)
          mad r7.x, r1.z, l(0.500000), l(0.500000)
          dp2 r1.z, r6.zwzz, l(472.899994, 133.699997, 0.000000, 0.000000)
          sincos r1.z, null, r1.z
          mul r1.z, r1.z, l(70124.148438)
          frc r1.z, r1.z
          mad r1.z, r1.z, l(2.000000), l(-1.000000)
          mad r7.y, r1.z, l(0.500000), l(0.500000)
          add r6.xyzw, r1.yyyy, l(5.000000, 6.000000, 9.000000, 10.000000)
          dp2 r1.z, r6.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
          sincos r1.z, null, r1.z
          mul r1.z, r1.z, l(70124.148438)
          frc r1.z, r1.z
          mad r1.z, r1.z, l(2.000000), l(-1.000000)
          mad r7.z, r1.z, l(0.500000), l(0.500000)
          dp2 r1.z, r6.zwzz, l(472.899994, 133.699997, 0.000000, 0.000000)
          sincos r1.z, null, r1.z
          mul r1.z, r1.z, l(70124.148438)
          frc r1.z, r1.z
          mad r1.z, r1.z, l(2.000000), l(-1.000000)
          mad r1.z, r1.z, l(0.500000), l(0.500000)
          add r6.xyzw, r1.yyyy, l(18.000000, 19.000000, 7.000000, 8.000000)
          dp2 r1.y, r6.xyxx, l(472.899994, 133.699997, 0.000000, 0.000000)
          sincos r1.y, null, r1.y
          mul r1.y, r1.y, l(70124.148438)
          frc r1.y, r1.y
          mad r1.y, r1.y, l(2.000000), l(-1.000000)
          mad r1.y, r1.y, l(0.500000), l(0.500000)
          add r8.xyzw, cb2[26].xyzw, -cb2[27].xyzw
          mad r7.xyz, r7.xyzx, r8.xyzx, cb2[27].xyzx
          dp3 r1.w, r7.xyzx, r7.xyzx
          sqrt r2.w, r1.w
          lt r2.w, l(0.000000), r2.w
          itof r4.w, cb2[35].x
          mov_sat r4.w, r4.w
          mad r1.z, r1.z, r8.w, cb2[27].w
          rsq r1.w, r1.w
          mul r8.xyz, r1.wwww, r7.xyzx
          mad r8.xyz, r8.xyzx, r1.zzzz, -r7.xyzx
          mad r8.xyz, r4.wwww, r8.xyzx, r7.xyzx
          movc r7.xyz, r2.wwww, r8.xyzx, r7.xyzx
          add r1.z, -cb2[30].x, cb2[30].y
          mad r8.y, r1.y, r1.z, cb2[30].x
          max r9.y, cb2[30].z, l(0.001000)
          dp2 r1.y, r6.zwzz, l(472.899994, 133.699997, 0.000000, 0.000000)
          sincos r1.y, null, r1.y
          mul r1.y, r1.y, l(70124.148438)
          frc r1.y, r1.y
          mad r1.y, r1.y, l(2.000000), l(-1.000000)
          mad r1.y, r1.y, l(0.500000), l(0.500000)
          iadd r1.z, -cb2[34].x, cb2[34].y
          itof r1.z, r1.z
          mul r1.y, r1.z, r1.y
          round_ne r1.y, r1.y
          itof r1.z, cb2[34].x
          add r9.z, r1.y, r1.z
          imm_atomic_alloc r6.x, u3
          store_structured u3.xyzw, r6.x, l(0), r0.xyzw
          mov r7.w, l(0)
          store_structured u3.xyzw, r6.x, l(16), r7.xyzw
          store_structured u3.xyzw, r6.x, l(32), l(0,0,1.000000,0)
          store_structured u3.xyzw, r6.x, l(48), r3.yzwx
          mov r8.x, cb2[30].w
          mov r8.zw, cb2[31].zzzz
          store_structured u3.xyzw, r6.x, l(64), r8.xyzw
          mov r9.xw, cb2[31].xxxy
          store_structured u3.xyzw, r6.x, l(80), r9.xyzw
          mov r7.x, cb2[31].w
          mov r7.z, l(0)
          store_structured u3.xyzw, r6.x, l(96), r7.xxzz
          store_structured u3.xyzw, r6.x, l(112), cb2[33].xyzw
          mov r7.x, cb2[34].z
          mov r7.yzw, l(0,0,0,0)
          store_structured u3.xyzw, r6.x, l(128), r7.xyzw
        endif 
      endif 
    endif 
    store_structured u0.xyzw, vThreadID.x, l(0), r0.xyzw
    store_structured u0.x, vThreadID.x, l(20), r1.x
    store_structured u0.xyz, vThreadID.x, l(32), r2.xyzx
    store_structured u0.x, vThreadID.x, l(60), r3.x
    store_structured u0.xyz, vThreadID.x, l(68), r4.xyzx
    store_structured u0.x, vThreadID.x, l(88), r5.x
    store_structured u0.x, vThreadID.x, l(96), r5.y
  endif 
endif 
ret 
// Approximately 441 instruction slots used
