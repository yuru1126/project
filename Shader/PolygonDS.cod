//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  TRIEDGE   float       
// SV_TessFactor            1   x           1  TRIEDGE   float       
// SV_TessFactor            2   x           2  TRIEDGE   float       
// SV_InsideTessFactor      0   x           3   TRIINT   float       
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// POSITION                 0   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// NORMAL                   0   xyz         4     NONE   float   xyz 
//
// Tessellation Domain   # of control points
// -------------------- --------------------
// Triangle                                3
//
ds_5_0
dcl_input_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_globalFlags refactoringAllowed
dcl_input vDomain.xyz
dcl_input vicp[3][0].xy
dcl_input vicp[3][1].xyz
dcl_input vicp[3][2].xyz
dcl_input vicp[3][3].xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_temps 1
mul r0.xyz, vDomain.yyyy, vicp[1][1].xyzx
mad r0.xyz, vicp[0][1].xyzx, vDomain.xxxx, r0.xyzx
mad r0.xyz, vicp[2][1].xyzx, vDomain.zzzz, r0.xyzx
mov o0.xyz, r0.xyzx
mov o2.xyz, r0.xyzx
mov o0.w, l(1.000000)
mul r0.xy, vDomain.yyyy, vicp[1][0].xyxx
mad r0.xy, vicp[0][0].xyxx, vDomain.xxxx, r0.xyxx
mad o1.xy, vicp[2][0].xyxx, vDomain.zzzz, r0.xyxx
mov o3.xyzw, vicp[0][3].xyzw
mul r0.xyz, vDomain.yyyy, vicp[1][2].xyzx
mad r0.xyz, vicp[0][2].xyzx, vDomain.xxxx, r0.xyzx
mad o4.xyz, vicp[2][2].xyzx, vDomain.zzzz, r0.xyzx
ret 
// Approximately 14 instruction slots used
