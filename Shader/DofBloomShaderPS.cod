//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// DiffuseTexture                    texture  float4          2d             t0      1 
// DepthTexture                      texture  float4          2d             t1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.x, v2.xyxx, t0.wxyz, s0
mul o0.w, r0.x, v1.w
resinfo_indexable(texture2d)(float,float,float,float)_uint r0.xy, l(0), t0.xyzw
utof r0.xy, r0.xyxx
div r0.xy, l(4.000000, 4.000000, 0.000000, 0.000000), r0.xyxx
mov r1.xyz, l(0,0,0,0)
mov r0.zw, l(0,0,0,-3)
loop 
  ilt r1.w, l(3), r0.w
  breakc_nz r1.w
  imul null, r1.w, r0.w, r0.w
  itof r2.x, r0.w
  mul r2.y, r0.y, r2.x
  mov r3.xyz, r1.xyzx
  mov r2.z, r0.z
  mov r2.w, l(-3)
  loop 
    ilt r3.w, l(3), r2.w
    breakc_nz r3.w
    imad r3.w, r2.w, r2.w, r1.w
    itof r3.w, r3.w
    mad_sat r3.w, -r3.w, l(0.100000), l(1.000000)
    itof r4.x, r2.w
    mul r2.x, r0.x, r4.x
    add r4.xy, r2.xyxx, v2.xyxx
    sample_indexable(texture2d)(float,float,float,float) r2.x, r4.xyxx, t1.xyzw, s0
    add r2.x, r2.x, l(-50.000000)
    mul r2.x, |r2.x|, l(0.020000)
    min r2.x, r2.x, l(1.000000)
    mul r4.z, r2.x, r3.w
    sample_indexable(texture2d)(float,float,float,float) r4.xyw, r4.xyxx, t0.xywz, s0
    mad r3.xyz, r4.xywx, r4.zzzz, r3.xyzx
    mad r2.z, r3.w, r2.x, r2.z
    iadd r2.w, r2.w, l(1)
  endloop 
  mov r1.xyz, r3.xyzx
  mov r0.z, r2.z
  iadd r0.w, r0.w, l(1)
endloop 
div o0.xyz, r1.xyzx, r0.zzzz
ret 
// Approximately 41 instruction slots used
